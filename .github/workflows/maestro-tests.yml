name: Maestro UI Tests

on:
  workflow_dispatch:
    inputs:
      platform:
        description: 'Platform to test (ios/android)'
        required: true
        type: choice
        options:
          - ios
          - android
      app_url:
        description: 'URL to download the app binary (.app/.apk)'
        required: true
      test_tag:
        description: 'Test tag to run (e.g., searchTests)'
        required: true
        default: 'searchTests'

jobs:
  mobile-test-ios:
    if: github.event.inputs.platform == 'ios'
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Checkout Alfie-Mocks repository
        uses: actions/checkout@v3
        with:
          repository: Mindera/Alfie-Mocks
          path: alfie-mocks

      - name: Install and Start Mock Server
        run: |
          cd alfie-mocks
          npm install apollo-server graphql
          node index.js &
          sleep 5
          curl -s http://localhost:4000 > /dev/null || exit 1
          cd ..

      - name: Install Maestro
        run: |
          curl -Ls "https://get.maestro.mobile.dev" | bash
          echo "${HOME}/.maestro/bin" >> $GITHUB_PATH

      - name: Setup iOS dependencies
        run: |
          sudo xcode-select --switch /Applications/Xcode.app
          xcrun simctl list devices

      - name: Setup iOS app
        run: |
          RUNTIME_ID=$(xcrun simctl list runtimes | grep iOS | tail -n1 | cut -d ' ' -f7)
          DEVICE_NAME="iPhone 15"
          DEVICE_ID=$(xcrun simctl create "$DEVICE_NAME" "com.apple.CoreSimulator.SimDeviceType.iPhone-15" "$RUNTIME_ID")
          xcrun simctl boot "$DEVICE_ID"
          until xcrun simctl list devices | grep -q "$DEVICE_ID.*Booted"; do sleep 2; done
          curl -L "${{ github.event.inputs.app_url }}" -o artifacts/app.zip
          cd artifacts && unzip app.zip && rm app.zip
          [ ! -d "Alfie.app" ] && mv *.app Alfie.app
          xcrun simctl install "$DEVICE_ID" "Alfie.app"
          xcrun simctl get_app_container "$DEVICE_ID" "com.mindera.alfie.debug" > /dev/null 2>&1 || exit 1

      - name: Give permission to run script
        run: chmod +x scripts/run-tests.sh

      - name: Run UI tests
        run: ./scripts/run-tests.sh ios ${{ github.event.inputs.test_tag }} --skip-device-check

      - name: Collect test artifacts
        if: always()
        run: |
          mkdir -p test-artifacts
          cp -r reports/* test-artifacts/ || true
          cp -r ~/.maestro/tests/* test-artifacts/screenshots/ || true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ios-test-results
          path: |
            test-artifacts/
            reports/
            ~/.maestro/tests/
          retention-days: 30

  mobile-test-android:
    if: github.event.inputs.platform == 'android'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Checkout Alfie-Mocks repository
        uses: actions/checkout@v3
        with:
          repository: Mindera/Alfie-Mocks
          path: alfie-mocks

      - name: Install and Start Mock Server
        run: |
          cd alfie-mocks
          npm install apollo-server graphql
          node index.js &
          sleep 5
          curl -s http://localhost:4000 > /dev/null || exit 1
          cd ..

      - name: Install Maestro
        run: |
          curl -Ls "https://get.maestro.mobile.dev" | bash
          echo "${HOME}/.maestro/bin" >> $GITHUB_PATH

      - name: Install adb
        run: |
          sudo apt-get update
          sudo apt-get install -y android-sdk-platform-tools

      - name: Download APK
        run: curl -L "${{ github.event.inputs.app_url }}" -o Alfie.apk

      - name: List adb devices (start)
        run: adb devices

      - name: List emulator processes
        run: ps aux | grep emulator

      - name: Show emulator logs
        run: cat /root/logs/*.log || true
        
      - name: Start Android emulator container
        run: |
          docker run -d --name android-emulator --privileged --device /dev/kvm -p 5555:5555 -p 5554:5554 -p 6080:6080 budtmo/docker-android:emulator_13.0
          sleep 30

      - name: Wait for emulator to boot
        run: |
          for i in {1..90}; do
            if adb devices | grep -w "device" | grep "emulator-5554"; then
              if adb shell getprop sys.boot_completed | grep -m 1 '1'; then
                echo "Emulador pronto!"
                adb devices
                break
              fi
            fi
            echo "Aguardando emulador..."
            sleep 5
          done
          adb devices  

      - name: Install APK
        run: adb install Alfie.apk

      - name: Give permission to run script
        run: chmod +x scripts/run-tests.sh

      - name: Run UI tests
        run: ./scripts/run-tests.sh android ${{ github.event.inputs.test_tag }} --skip-device-check

      - name: Collect test artifacts
        if: always()
        run: |
          mkdir -p test-artifacts
          cp -r reports/* test-artifacts/ || true
          cp -r ~/.maestro/tests/* test-artifacts/screenshots/ || true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-test-results
          path: |
            test-artifacts/
            reports/
            ~/.maestro/tests/
          retention-days: 30 